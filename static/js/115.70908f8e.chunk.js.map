{"version":3,"file":"static/js/115.70908f8e.chunk.js","mappings":"gTAEaA,EAAUC,EAAAA,EAAAA,IAAH,sBAEPC,EAAOD,EAAAA,EAAAA,GAAH,4ECFJE,EAAWF,EAAAA,EAAAA,GAAH,yCAIRG,EAAaH,EAAAA,EAAAA,IAAH,uIAQVI,EAAMJ,EAAAA,EAAAA,IAAH,sBAEHK,EAAOL,EAAAA,EAAAA,EAAH,wG,SCDjB,EAZa,SAAC,GAAiC,IAA/BM,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,OAC/B,OACE,UAACN,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CAAKK,IAAKD,EAAQE,IAAKJ,EAAMK,MAAO,SAEtC,SAACN,EAAD,UAAOC,KACP,UAACD,EAAD,WAAM,cAAYE,OAGvB,ECqCD,EA3Ca,WACX,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAaC,EAAAA,EAAAA,YAAWC,EAAAA,IAE9BC,EAAAA,EAAAA,YAAU,WAAM,wCACd,+GAIcC,EAAAA,EAAAA,gBAAyBT,GAJvC,gBAGcU,EAHd,EAGMC,KAAQD,KAEVN,GAAW,OAAIM,IALnB,gDAOIE,QAAQC,MAAM,IAAIC,OAPtB,0DADc,uBAAC,WAAD,wBAWdC,EACD,GAAE,CAACf,IAQJ,OACE,oBAASgB,UAAU,UAAnB,UACE,SAAC7B,EAAD,CAAS6B,UAAU,YAAnB,UACE,SAAC3B,EAAD,UACGc,EAAQc,KAAI,gBAVCC,EAUEC,EAAH,EAAGA,UAAWzB,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,UAAWyB,EAA/B,EAA+BA,aAA/B,OACX,SAAC,EAAD,CAEE1B,KAAMA,EACNC,UAAWA,EACXC,QAfUsB,EAeYE,EAdzBF,EACHb,EAAaa,EACb,mFASWC,EAFI,SAYtB,C,qEC9CDE,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAEHb,EAAW,CACtBc,eADsB,WAEpB,OAAOF,EAAAA,EAAAA,IAAA,qCAAwCC,GAChD,EAEDE,aALsB,SAKTC,GACX,OAAOJ,EAAAA,EAAAA,IAAA,gBAAmBI,EAAnB,oBAAiCH,GACzC,EAEDI,gBATsB,SASNC,GACd,OAAON,EAAAA,EAAAA,IAAA,6BAAgCM,EAAhC,oBAAiDL,GACzD,EAEDM,gBAbsB,SAaNH,GACd,OAAOJ,EAAAA,EAAAA,IAAA,gBAAmBI,EAAnB,4BAAyCH,GACjD,EAEDO,gBAjBsB,SAiBNJ,GACd,OAAOJ,EAAAA,EAAAA,IAAA,iBAAoBI,EAApB,4BAA0CH,GAClD,E","sources":["components/Cast/Cast.styled.jsx","components/Cast/Item/Item.styled.jsx","components/Cast/Item/Item.jsx","components/Cast/Cast.jsx","services/fetchMovies.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastBox = styled.div``;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n","import styled from '@emotion/styled';\n\nexport const ItemList = styled.li`\n  width: 180px;\n`;\n\nexport const ImgWrapper = styled.div`\n  height: 270px;\n  display: flex;\n  flex-direction: column;\n  justify-content: end;\n  margin-bottom: 8px;\n`;\n\nexport const Img = styled.img``;\n\nexport const Text = styled.p`\n  &:not(:last-child) {\n    margin-bottom: 10px;\n\n    font-weight: 600;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ItemList, Img, Text, ImgWrapper } from './Item.styled';\n\nconst Item = ({ name, character, urlImg }) => {\n  return (\n    <ItemList>\n      <ImgWrapper>\n        <Img src={urlImg} alt={name} width={180} />\n      </ImgWrapper>\n      <Text>{name}</Text>\n      <Text>Character: {character}</Text>\n    </ItemList>\n  );\n};\n\nexport default Item;\n\nItem.propTypes = {\n  name: PropTypes.string,\n  character: PropTypes.string,\n  urlImg: PropTypes.string,\n};\n","import { Context } from 'components/App';\nimport { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchApi } from 'services/fetchMovies';\nimport { CastBox, List } from './Cast.styled';\nimport Item from './Item';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [credits, setCredits] = useState([]);\n  const baseUrlImg = useContext(Context);\n\n  useEffect(() => {\n    async function getCredits() {\n      try {\n        const {\n          data: { cast },\n        } = await fetchApi.getCreditsMovie(movieId);\n        setCredits([...cast]);\n      } catch {\n        console.error(new Error());\n      }\n    }\n    getCredits();\n  }, [movieId]);\n\n  const compileImgURL = path => {\n    return path\n      ? baseUrlImg + path\n      : 'https://icon-library.com/images/unknown-person-icon/unknown-person-icon-27.jpg';\n  };\n\n  return (\n    <section className=\"section\">\n      <CastBox className=\"container\">\n        <List>\n          {credits.map(({ credit_id, name, character, profile_path }) => (\n            <Item\n              key={credit_id}\n              name={name}\n              character={character}\n              urlImg={compileImgURL(profile_path)}\n            />\n          ))}\n        </List>\n      </CastBox>\n    </section>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '75863554b170222a0e5caae215e0183a';\n\nexport const fetchApi = {\n  getTrendMovies() {\n    return axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  },\n\n  getMovieById(id) {\n    return axios.get(`movie/${id}?api_key=${API_KEY}`);\n  },\n\n  getMovieByQuery(query) {\n    return axios.get(`search/movie?query=${query}&api_key=${API_KEY}`);\n  },\n\n  getCreditsMovie(id) {\n    return axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  },\n\n  getReviewsMovie(id) {\n    return axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  },\n};\n"],"names":["CastBox","styled","List","ItemList","ImgWrapper","Img","Text","name","character","urlImg","src","alt","width","movieId","useParams","useState","credits","setCredits","baseUrlImg","useContext","Context","useEffect","fetchApi","cast","data","console","error","Error","getCredits","className","map","path","credit_id","profile_path","axios","API_KEY","getTrendMovies","getMovieById","id","getMovieByQuery","query","getCreditsMovie","getReviewsMovie"],"sourceRoot":""}